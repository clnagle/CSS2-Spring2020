# -*- coding: utf-8 -*-
"""Numpy_lecture.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wfqR1oDR8OXp5SGhIOV9AVietE2_BCcU

Using NumPY
"""

import numpy as np

"""First thing we will do is create an array. An array is just a structure that has the same value types. Typically, we will deal with integers and floating numbers"""

a = np.array([1, 2, 3, 5])

"""We can see what that array looks like using print"""

print(a)

"""We can look at specific parts of this array and slice it in different ways"""

a[0]

a[1]

a[0:2]

a[1:3]

a[-1]

"""With an array, we can see various built in functions. A lot of these will be various useful for us"""

a.shape
np.shape(a)

a.mean()
np.mean(a)

a.min()
np.min(a)

a.max()
np.max(a)

np.log(a)

np.sqrt(a)

a.reshape(4,1)
np.reshape(a,[4,1])

a+1

"""Let's create a slightly more complicated array"""

b = np.array([[1,2,3],[4,5,6]])
print(b)

"""We can then apply those previous functions, but along different axes"""

b.sum(axis=0)

"""Numpy is also useful for creating empty or random arrays"""

b = np.zeros((1,2))
print(b)

c = np.ones((2,2))   
print(c)

"""You can also make arrays of random integers"""

e = np.random.randint(0,10,[2,2])
print(e)

"""And arrays of random numbers"""

f = np.random.randn(2,3)
print(f)

"""We can manipulate our arrays using a variety of functions"""

np.add(e,c)
e+c

e - b
np.subtract(e, b)

e - b
np.multiply(e, b)

e / c
np.divide(e, c)

"""One thing that will come in handy often is the ability to use boolean stuff with arrays"""

1 > 0

1 < 0

1 == 0

x = np.array([1,2,3,4,5,6,7,8])
print(x)

boolean = x > 4
print(boolean)

boolean = x >= 4
print(boolean)

x[boolean]

"""Last thing I briefly wanted to cover was appending and concatanating. Sometimes, we want to add numbers to our array."""

x

y = np.array([9,10])

np.concatenate([x,y])

z = np.array([11,12,13]).reshape(3,1)
print(z)

np.concatenate([x,y,z])

import pandas as pd

data = pd.read_csv('sample_data/california_housing_train.csv')

data.describe()